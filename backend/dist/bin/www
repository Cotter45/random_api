#!/usr/bin/env node

const cluster = require("cluster");
const totalCPUs = require("os").cpus().length;

const { port } = require('../config');

const app = require('../app');
const db = require('../db/models');

if (cluster.isMaster) {
  console.log(`Master ${process.pid} is running`);
  
  const numWorkers = Math.min(...[3, totalCPUs]);
  
  // Fork workers.
  for (let i = 0; i < numWorkers; i++) {
    cluster.fork();
  }
  
  cluster.on("exit", (worker, code, signal) => {
    console.log(`worker ${worker.process.pid} died`);
    cluster.fork();
  });
} else {

  // Check the database connection before starting the app
  db.sequelize
    .authenticate()
    .then(() => {
      console.log('Database connection success! Sequelize is ready to use...');

      // Start listening for connections
      app.listen(port, () => console.log(`Listening on port ${port}...`));
    })
    .catch((err) => {
      console.log('Database connection failure.');
      console.error(err);
    });
};